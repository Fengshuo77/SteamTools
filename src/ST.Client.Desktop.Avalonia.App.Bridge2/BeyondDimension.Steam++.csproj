<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--https://docs.microsoft.com/zh-cn/windows/apps/windows-app-sdk/single-project-msix?tabs=csharp-->
    <!--https://github.com/andrewleader/WindowsAppSDKGallery-->
    <!--<OutputType>Exe</OutputType>-->
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
    <SupportedOSPlatformVersion>10.0.17763.0</SupportedOSPlatformVersion>
    <SignAssembly>false</SignAssembly>
    <!--(SignAssembly)对此程序集进行签名会导致编译失败(CompileAvaloniaXamlTask)-->
    <RootNamespace>System.Application.UI</RootNamespace>
    <AssemblyName>Steam++</AssemblyName>
    <DefineConstants>WINDOWS;WINDOWS_DESKTOP_BRIDGE;PUBLISH;$(DefineConstants)</DefineConstants>
    <ApplicationIcon>..\ST.Client.Desktop.Avalonia\Application\UI\Assets\Icon.ico</ApplicationIcon>
    <ApplicationManifest>..\ST.Client.Desktop.Avalonia.App\Properties\app.manifest</ApplicationManifest>
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <WindowsSdkPackageVersion>10.0.19041.24</WindowsSdkPackageVersion>
    <UseWindowsForms Condition="'$(Configuration)'=='Debug'">true</UseWindowsForms>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
    <PackageCertificateKeyFile>ST.Client.Avalonia.App.Bridge.Package_TemporaryKey.pfx</PackageCertificateKeyFile>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
    <AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppxBundle>Never</AppxBundle>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <PublishSingleFile>false</PublishSingleFile>
    <PublishReadyToRun>false</PublishReadyToRun>
    <!--目前裁剪存在问题，禁用-->
    <PublishTrimmed>false</PublishTrimmed>
    <TrimMode>link</TrimMode>
    <TrimmerRemoveSymbols>true</TrimmerRemoveSymbols>
    <!--剪裁框架库功能 https://docs.microsoft.com/zh-cn/dotnet/core/deploying/trimming-options#trimming-framework-library-features -->
    <DebuggerSupport>false</DebuggerSupport>
    <EnableUnsafeBinaryFormatterSerialization>false</EnableUnsafeBinaryFormatterSerialization>
    <EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
    <SuppressTrimAnalysisWarnings>false</SuppressTrimAnalysisWarnings>
    <EventSourceSupport>false</EventSourceSupport>
    <HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
    <UseSystemResourceKeys>false</UseSystemResourceKeys>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
    <AllowedReferenceRelatedFileExtensions>
      <!-- Prevent default XML and PDB files copied to output in RELEASE. 
           Only *.allowedextension files will be included, which doesn't exist in my case.
       -->
      .allowedextension
    </AllowedReferenceRelatedFileExtensions>
  </PropertyGroup>

  <ItemGroup>
    <RuntimeHostConfigurationOption Include="System.Net.SocketsHttpHandler.Http3Support" Value="true" />
  </ItemGroup>

  <!--<ItemGroup>
    <TrimmerRootDescriptor Include="TrimmerRoots.xml" />
    <TrimmerRootAssembly Include="System.Text.Json" />
  </ItemGroup>-->

  <ItemGroup>
    <Compile Include="..\Startup2.cs" />
    <Compile Include="..\Startup2.HandleGlobalException.cs" />
    <Compile Include="..\Common.CoreLib\Properties\AssemblyInfo.cs">
      <Link>Properties\AssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="..\Common.CoreLib\Properties\AssemblyInfo.Version.cs">
      <Link>Properties\AssemblyInfo.Version.cs</Link>
    </Compile>
    <Compile Include="..\ST.Client.Desktop.Avalonia.App\*.cs" />
    <Compile Update="..\ST.Client.Desktop.Avalonia.App\App.axaml.cs">
      <Link>App.axaml.cs</Link>
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
    <AvaloniaResource Include="..\ST.Client.Desktop.Avalonia.App\App.axaml">
      <Link>App.axaml</Link>
      <SubType>Designer</SubType>
    </AvaloniaResource>
    <Compile Include="..\ST.Client.Desktop.Avalonia.App\Views\MainWindow.axaml.cs">
      <Link>Views\MainWindow.axaml.cs</Link>
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
    <AvaloniaResource Include="..\ST.Client.Desktop.Avalonia.App\Views\MainWindow.axaml">
      <Link>Views\MainWindow.axaml</Link>
      <SubType>Designer</SubType>
    </AvaloniaResource>
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)'=='Release'">
    <ProjectReference Include="..\Avalonia.Diagnostics\Avalonia.Diagnostics.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Avalonia.Native\Avalonia.Native.csproj" />
    <ProjectReference Include="..\Avalonia.Themes.Default\Avalonia.Themes.Default.csproj" />
    <ProjectReference Include="..\Avalonia.Themes.Fluent\Avalonia.Themes.Fluent.csproj" />
    <ProjectReference Include="..\Avalonia.X11\Avalonia.X11.csproj" />
    <ProjectReference Include="..\ST.Client.Desktop.Avalonia\ST.Client.Avalonia.csproj" />
    <ProjectReference Include="..\Common.CoreLib\Common.CoreLib.csproj" />
    <ProjectReference Include="..\ST.Client.Desktop.Windows\ST.Client.Windows.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="**\*.xaml.cs">
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
    <AvaloniaResource Include="**\*.xaml">
      <SubType>Designer</SubType>
    </AvaloniaResource>
    <AvaloniaResource Include="Assets\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" />
    <PackageReference Include="System.CommandLine.NamingConventionBinder" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="DesktopBridgeHelper2.cs" />
    <Compile Remove="FileSystemDesktopBridge.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="StyleCop.Analyzers" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
       Tools extension to be activated for this project even if the Windows App SDK Nuget
       package has not yet been restored -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
</Project>
